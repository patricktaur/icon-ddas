/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
import * as import0 from '@angular/router/src/directives/router_link';
import * as import3 from '@angular/core/src/linker/view';
export declare class Wrapper_RouterLink {
    context: import0.RouterLink;
    changed: boolean;
    _expr_0: any;
    _expr_1: any;
    _expr_2: any;
    _expr_3: any;
    _expr_4: any;
    constructor(p0: any, p1: any, p2: any);
    check_queryParams(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_fragment(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_preserveQueryParams(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_preserveFragment(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_routerLink(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    detectChangesInInputProps(view: import3.AppView<any>, el: any, throwOnChange: boolean): boolean;
    detectChangesInHostProps(view: import3.AppView<any>, el: any, throwOnChange: boolean): void;
}
export declare class Wrapper_RouterLinkWithHref {
    context: import0.RouterLinkWithHref;
    changed: boolean;
    changes: {
        [key: string]: any;
    };
    _expr_0: any;
    _expr_1: any;
    _expr_2: any;
    _expr_3: any;
    _expr_4: any;
    _expr_5: any;
    _expr_6: any;
    _expr_7: any;
    constructor(p0: any, p1: any, p2: any);
    check_target(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_queryParams(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_fragment(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_routerLinkOptions(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_preserveQueryParams(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_preserveFragment(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_routerLink(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    detectChangesInInputProps(view: import3.AppView<any>, el: any, throwOnChange: boolean): boolean;
    detectChangesInHostProps(view: import3.AppView<any>, el: any, throwOnChange: boolean): void;
}
